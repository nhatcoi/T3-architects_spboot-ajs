#services:
#  api-shop-service:
#    container_name: ShopApp
#    build:
#      context: ./
#      dockerfile: Dockerfile
#    env_file:
#      - .env
#    ports:
#      - '8080:8080'
#    networks:
#      - shopapp_backend
#    depends_on:
#      - postgres
#
#  postgres:
#    container_name: shop-postgres-db
#    image: postgres:13.3
#    ports:
#      - '5432:5432'
#    env_file:
#      - .env
#    volumes:
#      - postgres-data:/var/lib/postgresql/data
#    healthcheck:
#      test: [ "CMD", "pg_isready", "-U", "postgres" ]
#      interval: 30s
#      timeout: 30s
#      retries: 3
#    networks:
#      - shopapp_backend
#
#networks:
#  shopapp_backend:
#    external: true  # Đảm bảo sử dụng mạng đã tạo sẵn
#    driver: bridge
#
#volumes:
#  postgres-data:


services:
  api-pet-service:
    container_name: ShopApp
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - '8081:80'
    networks:
      - backend
    depends_on:
      - postgres
    restart: on-failure

  postgres:
    container_name: app-postgres-db
    image: postgres:13.3
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      #      - ./initPostgresData.sql:/docker-entrypoint-initdb.d/initPostgresData.sql
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres" ]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - backend


volumes:
  postgres-data:

networks:
  backend:
    driver: bridge


